rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only access their own data
    match /users/{userId} {
      // Allow read and write only if authenticated user's UID matches document ID
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Prevent creation of documents with mismatched IDs
      allow create: if request.auth != null
                    && request.auth.uid == userId
                    && request.auth.uid == resource.id;

      // Allow updates only to own data with valid structure
      allow update: if request.auth != null
                    && request.auth.uid == userId
                    && isValidUserData(request.resource.data);

      // Allow delete only of own data
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // Helper function to validate user data structure
    function isValidUserData(data) {
      return data.keys().hasAll(['watchlist', 'ratings', 'userLists', 'lastActive'])
             && data.watchlist is list
             && data.ratings is list
             && data.userLists is map
             && data.lastActive is number;
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}